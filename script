#!/bin/bash
#Authors Amanda NygÃ¥rds and Fabian Otterskog

#GLOBAL VARIABLES
# The home directory of System Manager.
SMHOME = pwd

#Create menu
printMenu() {
echo '*********************************************'
echo $'\t' "SYSTEM MANAGER (BETA)"
echo '*********************************************'
echo ua - User Add$'\t'$'\t'"(Create an new user)"
echo ul - User List$'\t'$'\t'"(List all login users)"
echo uv - User View$'\t'$'\t'"(View user properties)"
echo um - User Modify$'\t'"(Modify user properties)"
echo ud - User Delete$'\t'"(Delete a login user)"
echo ga - Group Add$'\t'$'\t'"(Create a new group)"
echo gl - Group List$'\t'$'\t'"(List all groups, not system groups)"
echo gv - Group View$'\t'$'\t'"(List all users in a group)"
echo gm - Group Modify$'\t'"(Add/remove user to/from a group)"
echo gd - Group Delete$'\t'"(Delete a group, not system groups)"
echo fa - Folder Add$'\t'$'\t'"(Create a new folder)"
echo fl - Folder List$'\t'$"(View content in a folder)"
echo fm - Folder Modify$'\t'"(Modify folder properties)"
echo fd - Folder Delete$'\t'"(Delete a folder)"
echo ss - SSH Server$'\t'$'\t'"(Manage SSH Server)"
}

#Adds a user with useradd shell prompt
userAdd() {
read -p 'Username:' usrname
sudo useradd $usrname
}

userView() {
# Read all user IDs.
# -F sepstring.
echo ----------------------------------------
echo Current login users on the system:
awk -F: '$3 >= 1000 && $4 <= 60000 && $1 != "nobody" {print $1}' /etc/passwd
}

#Delete user including home directory
userDel() {
echo "WARNING: You are about to delete a user."
read -p 'User to remove:' usrname
sudo userdel -r $usrname
}

groupMod() {
echo '*********************************************'
echo $'\t' "Modify Group"
echo '*********************************************'
echo "Do you want to add to a group or remove from a group?"
read -p '(add/remove):' input
if ($input != "add" || $input != "remove"); 
    echo "Error: No valid input for (add/remove)"
    fi
echo "Which user to modify?:"
read -p 'Username' usrname
echo "Which group to add/remove from?:"
read -p 'Group name:' grpname
if ($input == "remove");
    echo "Removing '$usrname' from group '$grpname'."
    sudo deluser $usrname $grpname

else
    echo "Adding '$username' to group '$grpname'."
    sudo usermod -a -G $grpname $usrname
fi
}

folderAdd () {
read -p 'Path:' move
read -p 'Name of folder:' fname
mv $move
mkdir $fname
mv $SMHOME
}

folderMod() {
read -p 'Path:' move
ls
read -p 'Name of folder' fname
echo '--------------------------------'
ls -l $fname
echo "--Options--"
echo rename $'\t'$'\t' - Rename selected folder.
echo privilegies $'\t' - Change privilegies for folder. 
echo stricky bit $'\t' - Change sticky bit.
echo setgid $'\t'$'\t' - Modify setgid.
echo lastmod $'\t' - Check and change last modified attribute.
read -p 'Option:' option
if [ $option = 'rename' ]
then
    read -p 'New name: ' nfname
    mv $move
    mv $fname $nfname
elif [ $option = 'privilegies' ]
then
    read -p 'Set privilegies: ' priv
    chmod $priv $fname
elif [ $option = 'sticky bit' ]
then
    read -p 'Have sticky bit? (yes/no): ' YNanswer
    if [ $YNanswer = 'yes' ]
    then
        chmod +t $fname
    else
        chmod -t $fname
    fi
elif [ $option = 'setgid' ]
then
    read -p 'Set setgid? (yes/no): ' YNanswer
        if [ $YNanswer = 'yes' ] 
        then
            chmod g+s $fname
        else 
            chmod g-s $fname
        fi
elif [ $option = 'lastmod' ]
then
    stat $fname
    read -p 'Change last modified attribute? (yes/no): ' YNanswer
    if [ $YNanswer = 'yes' ] 
    then
        read -p 'New date and time (YYYYMMDDHHmm): ' date
        touch -t $date $filename
    fi
else 
    echo "Invalid option"
fi
}

printMenu
